coef(lm(y ~ groups))
sum(coef(lm(y ~ groups)))
coef(lm(y ~ groups))
coef()
coef(lm(y ~ groups))
# Note that the baseline here is the *last* group
contrasts(groups) <- contr.sum(3)
coef(lm(y ~ groups))
# The "alphas" can be then obtained as follows:
coef(lm(y ~ groups))[-1]
tapply(y, groups, mean)
tapply(y - mean(y), groups, mean)
# Note that the baseline here is the *last* group
contrasts(groups) <- contr.SAS(3)
lm(y ~ groups)
set.seed(123)
y <-  c(rnorm(20, 5), rnorm(15, 10), rnorm(30, 25))
groups <- factor(c(rep("A", 20), rep("B", 15), rep("C", 30)))
tapply(y, groups, mean)
tapply(y - mean(y), groups, mean)
tapply(y, groups, mean)
# Note that the baseline here is the *last* group
contrasts(groups) <- contr.SAS(3)
lm(y ~ groups)
contrasts(groups) <- contr.sum(3)
# The "alphas" can be then obtained as follows:
coef(lm(y ~ groups))[-1]
contr.SAS(3)
set.seed(123)
y <-  c(rnorm(20, 5), rnorm(15, 10), rnorm(30, 25))
groups <- factor(c(rep("A", 20), rep("B", 15), rep("C", 30)))
tapply(y, groups, mean)
# Note that the baseline here is the *last* group
contrasts(groups) <- contr.SAS(3)
lm(y ~ groups)
# Again, there is a baseline here which is the *last* group
contrasts(groups) <- contr.sum(3)
contr.sum(3)
model.matrix(m)
m <- lm(y ~ groups)
model.matrix(m)
# Note that the baseline here is the *last* group
contrasts(groups) <- contr.SAS(3)
m <- lm(y ~ groups)
model.matrix(m)
# Note that the baseline here is the *last* group
contrasts(groups) <- contr.SAS(3)
m <- lm(y ~ groups)
model.matrix(m)
# Again, there is a baseline here which is the *last* group
contrasts(groups) <- contr.sum(3)
m <- lm(y ~ groups)
model.matrix(m)
coef(m)[c(2, 3)]
# Hence, the "alphas" are obtained as follows
alpha <- c(coef(m)[c(2, 3)], - sum(coef(m)[c(2, 3)]))
alpha
sum(alpha)
# Hence, the mean levels are equal to
coef(m)[1] + alpha
tapply(y, groups, mean)
# Note indeed that, by construction
sum(alpha)
# Again, there is a baseline here which is the *last* group, but the interpretation is entirely different
contrasts(groups) <- contr.sum(3)
m <- lm(y ~ groups)
model.matrix(m)
# Hence, the "alphas" are obtained as follows
alpha <- c(coef(m)[c(2, 3)], - sum(coef(m)[c(2, 3)]))
alpha
# Note indeed that, by construction
sum(alpha)
# Hence, the mean levels are equal to
coef(m)[1] + alpha
tapply(y, groups, mean)
# Again, there is a "baseline" here which is the *last* group, but the interpretation is entirely different.
contrasts(groups) <- contr.sum(3)
m <- lm(y ~ groups)
model.matrix(m)
# Hence, the "alphas" are obtained as follows
alpha <- c(coef(m)[c(2, 3)], - sum(coef(m)[c(2, 3)]))
alpha
# Note indeed that, by construction
sum(alpha)
# Hence, the mean levels are equal to
coef(m)[1] + alpha
tapply(y, groups, mean)
## exams ----------------------------------------------------------------------------
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/ESAMI/STAT1_17_11_2023/")
library("exams")
## PRELIMINARY QUESTIONS FOR THE EXAMS
Exam <- c("STAT_UNI.Rmd", "STAT_BIV.Rmd", "STAT_TEO.Rmd")
exams2pdf(Exam,  name = "STAT1_17_11_2023_", dir = "output",
edir = "exercises", template = "templates/plain.tex")
## exams ----------------------------------------------------------------------------
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/ESAMI/STAT1_17_11_2023/")
library("exams")
## PRELIMINARY QUESTIONS FOR THE EXAMS
Exam <- c("STAT_UNI.Rmd", "STAT_BIV.Rmd", "STAT_TEO.Rmd")
exams2pdf(Exam,  name = "STAT1_17_11_2023_", dir = "output",
edir = "exercises", template = "templates/plain.tex")
## exams ----------------------------------------------------------------------------
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/ESAMI/STAT1_17_11_2023/")
library("exams")
## PRELIMINARY QUESTIONS FOR THE EXAMS
Exam <- c("STAT_UNI.Rmd", "STAT_BIV.Rmd", "STAT_TEO.Rmd")
exams2pdf(Exam,  name = "STAT1_17_11_2023_", dir = "output",
edir = "exercises", template = "templates/plain.tex")
library(BSDA)
data(Darwin)
cross <- Darwin$cross[1:15]
self <- Darwin$self[1:15]
diff <- cross - self
#kable(data.frame(cross, self, diff))
#t.test(cross, self, paired = TRUE, var.equal = TRUE)
#t.test(cross, self, paired = FALSE, var.equal = TRUE)
#summary(lm(c(cross, self) ~ rep(c("Cross", "Self"), each = 15)))
self
cross
mean(cross)
mean(self)
quantile(cross, type = 1)
quantile(self, type = 1)
boxplot(cross, self)
plot(ecdf(diff))
## exams ----------------------------------------------------------------------------
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/ESAMI/STAT1_17_11_2023/")
library("exams")
## PRELIMINARY QUESTIONS FOR THE EXAMS
Exam <- c("STAT_UNI.Rmd", "STAT_BIV.Rmd", "STAT_TEO.Rmd")
exams2pdf(Exam,  name = "STAT1_17_11_2023_", dir = "output",
edir = "exercises", template = "templates/plain.tex")
plot(x, y)
x <- c(8.31, 9.15, 7.77, 4.39, 0.31, 8.94, 5.13, 1.39, 4.30, 2.03)
y <- c(7.51, 9.04, 6.64, 4.65, 1.85, 8.37, 5.10, 2.61, 6.01, 4.30)
dataset <- data.frame(fertilizzante = x, crescita = y)
plot(x, y)
cor(x, y)
lm(y ~ x)
sum(cross)
knitr::opts_chunk$set(echo = F, eval = T, message = F, warning = F, error = F, comment = NA, cache = F, include = T, R.options = list(width = 100), collapse = T, dpi = 200, fig.align = "center", fig.height = 6, fig.width = 8)
#| echo: false
rm(list = ls())
library(BSDA)
data(Darwin)
cross <- Darwin$cross[1:15]
self <- Darwin$self[1:15]
diff <- cross - self
#| echo: false
my_var <- function(x) mean(x^2) - mean(x)^2
tab <- t(c(mean(cross), mean(self), mean(diff), my_var(cross), my_var(self)))
colnames(tab) <- c("Media cross ", "Media self", "Media diff", "Varianza cross", "Varianza self")
tab
#| echo: false
quantile(cross, type = 1, c(0.25, 0.5, 0.75))
sum(cross)
knitr::opts_chunk$set(echo = F, eval = T, message = F, warning = F, error = F, comment = NA, cache = F, include = T, R.options = list(width = 100), collapse = T, dpi = 200, fig.align = "center", fig.height = 6, fig.width = 8)
esiti_full <- read.csv("ESITI.csv", sep = ";")
esiti <- subset(esiti_full,select=c(Matricola, Esito))
esiti <- esiti[esiti$Esito != "ASS" & esiti$Esito != "RIT", ]
xbar <- mean(as.numeric(esiti$Esito[esiti$Esito != "INS"]))
xmed <- median(as.numeric(esiti$Esito[esiti$Esito != "INS"]))
esiti$Esito[esiti$Esito >= 27 & esiti$Esito != "INS"] <- "Maggiore o uguale a 27"
knitr::kable(esiti[order(esiti$Matricola),],row.names = FALSE, align = c('l', 'l'))
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIFIUTATO") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
dataset <- filter(dataset,  Esito != "INS")
# dataset$Esito[dataset$Esito == "INS"] <- sample(10:17, size = sum(dataset$Esito == "INS"), replace = T)
dataset <- dataset %>% mutate(Esito = as.numeric(Esito))
ggplot(data  = filter(dataset, Appello == "I"), aes(x = AA, y = Esito, fill = AA)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
rm(list = ls())
taxi <- read.csv("taxi.csv")
library(MASS)
? rlm
whisker_lower <- 1                                  # Predefined boxplot values
quartile_1st <- 2
median <- 3
quartile_3rd <- 4
whisker_upper <- 5
data_base <- list(stats = matrix(c(whisker_lower,   # Create list of values
quartile_1st,
median,
quartile_3rd,
whisker_upper),
nrow = 5),
n = 100)
data_base
bxp(data_base)
bxp(data_base)
? bxp
knitr::opts_chunk$set(echo = F, eval = T, message = F, warning = F, error = F, comment = NA, cache = F, include = T, R.options = list(width = 100), collapse = T, dpi = 200, fig.align = "center", fig.height = 6, fig.width = 8)
#| echo: false
rm(list = ls())
library(BSDA)
data(Darwin)
cross <- Darwin$cross[1:15]
self <- Darwin$self[1:15]
diff <- cross - self
#| echo: false
my_var <- function(x) mean(x^2) - mean(x)^2
tab <- t(c(mean(cross), mean(self), mean(diff), my_var(cross), my_var(self)))
colnames(tab) <- c("Media cross ", "Media self", "Media diff", "Varianza cross", "Varianza self")
tab
#| echo: false
quantile(cross, type = 1, c(0.25, 0.5, 0.75))
#| echo: false
quantile(self, type = 1, c(0.25, 0.5, 0.75))
#| echo: false
boxplot(cross, self)
data <- boxplot(cross, self)
data
quantile(cross, 0.25, type = 1)
data$stats
data$stats[2, ] <- c(quantile(cross, 0.25, type = 1), quantile(self, 0.25, type = 1))
data$stats
data <- boxplot(cross, self)
data_bxp <- boxplot(cross, self)
data_bxp$stats[2, ] <- c(quantile(cross, 0.25, type = 1), quantile(self, 0.25, type = 1))
data_bxp$stats[3, ] <- c(median(cross), median(self))
data_bxp$stats[4, ] <- c(quantile(cross, 0.75, type = 1), quantile(self, 0.75, type = 1))
data_bxp <- boxplot(cross, self)
data_bxp
data_bxp$stats[2, ] <- c(quantile(cross, 0.25, type = 1), quantile(self, 0.25, type = 1))
data_bxp$stats[3, ] <- c(median(cross), median(self))
data_bxp$stats[4, ] <- c(quantile(cross, 0.75, type = 1), quantile(self, 0.75, type = 1))
data_bxp
data_bxp$names <- c("Cross", "Self")
bxp(data_bxp)
data_bxp <- boxplot(cross, self)
data_bxp$stats[2, ] <- c(quantile(cross, 0.25, type = 1), quantile(self, 0.25, type = 1))
data_bxp$stats[3, ] <- c(median(cross), median(self))
data_bxp$stats[4, ] <- c(quantile(cross, 0.75, type = 1), quantile(self, 0.75, type = 1))
data_bxp$out <- c(12, 12)
data_bxp$group <- c(1, 1)
data_bxp$names <- c("Cross", "Self")
bxp(data_bxp)
bxp(data_bxp)
diff(quantile(cross, c(0.25, 0.75), type = 1)
)
quantile(cross, c(0.25, 0.75), type = 1)
1.5 * diff(quantile(cross, c(0.25, 0.75), type = 1))
quantile(cross, c(0.25), type = 1) - 1.5 * diff(quantile(cross, c(0.25, 0.75), type = 1))
cross
sort(cross)
sort(self)
quantile(self, c(0.25), type = 1) - 1.5 * diff(quantile(self, c(0.25, 0.75), type = 1))
data_bxp <- boxplot(cross, self)
data_bxp
data_bxp <- boxplot(cross, self, plot = FALSE)
data_bxp$stats[1, 2] <- min(cross)
data_bxp <- boxplot(cross, self, plot = FALSE)
quantile(cross, c(0.25), type = 1) - 1.5 * diff(quantile(cross, c(0.25, 0.75), type = 1))
quantile(self, c(0.25), type = 1) - 1.5 * diff(quantile(self, c(0.25, 0.75), type = 1))
data_bxp$stats[1, 2] <- min(cross)
data_bxp$stats[2, ] <- c(quantile(cross, 0.25, type = 1), quantile(self, 0.25, type = 1))
data_bxp$stats[3, ] <- c(median(cross), median(self))
data_bxp$stats[4, ] <- c(quantile(cross, 0.75, type = 1), quantile(self, 0.75, type = 1))
data_bxp$out <- c(12, 12)
data_bxp$group <- c(1, 1)
data_bxp$names <- c("Cross", "Self")
bxp(data_bxp)
sort(cross)
abline(v = 0, lty = "dashed")
Fx <- ecdf(diff)
plot(Fx, main = "", ylab = "F(x)")
abline(v = 0, lty = "dashed")
xbar
knitr::opts_chunk$set(echo = F, eval = T, message = F, warning = F, error = F, comment = NA, cache = F, include = T, R.options = list(width = 100), collapse = T, dpi = 200, fig.align = "center", fig.height = 6, fig.width = 8)
esiti_full <- read.csv("ESITI.csv", sep = ";")
esiti <- subset(esiti_full,select=c(Matricola, Esito))
esiti <- esiti[esiti$Esito != "ASS" & esiti$Esito != "RIT", ]
xbar <- mean(as.numeric(esiti$Esito[esiti$Esito != "INS"]))
xmed <- median(as.numeric(esiti$Esito[esiti$Esito != "INS"]))
xbar
boxplot(as.numeric(esiti$Esito[esiti$Esito != "INS"]))
par(mfrow = c(1, 2))
boxplot(as.numeric(esiti$Esito[esiti$Esito != "INS"]), xlab = "Voti sufficienti (Primo appello)")
par(mfrow = c(1, 2))
xmed
hist(as.numeric(esiti$Esito[esiti$Esito != "INS"]), xlab = "Voti sufficienti")
par(mfrow = c(1, 2))
boxplot(as.numeric(esiti$Esito[esiti$Esito != "INS"]), xlab = "Voti sufficienti")
hist(as.numeric(esiti$Esito[esiti$Esito != "INS"]), xlab = "Voti sufficienti")
boxplot(as.numeric(esiti$Esito[esiti$Esito != "INS"]), xlab = "Voti sufficienti", horizontal = TRUE)
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIFIUTATO") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/StatI/esami")
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIFIUTATO") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
dataset <- filter(dataset,  Esito != "INS")
# dataset$Esito[dataset$Esito == "INS"] <- sample(10:17, size = sum(dataset$Esito == "INS"), replace = T)
dataset <- dataset %>% mutate(Esito = as.numeric(Esito))
ggplot(data  = filter(dataset, Appello == "I"), aes(x = AA, y = Esito, fill = AA)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
dataset <- filter(dataset,  Esito != "INS")
# dataset$Esito[dataset$Esito == "INS"] <- sample(10:17, size = sum(dataset$Esito == "INS"), replace = T)
dataset <- dataset %>% mutate(Esito = as.numeric(Esito))
ggplot(data  = filter(dataset, Appello == "I"), aes(x = AA, y = Esito, fill = AA)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
aggregate(Esito ~ AA, mean, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, median, data = filter(dataset, Appello == "I"))
summary(lm(Esito ~ AA, data = filter(dataset, Appello == "I")))
ilter(dataset, Appello == "I")
filter(dataset, Appello == "I")
ggplot(data  = filter(dataset), aes(x = AA, y = Esito, fill = AA, group = Appello)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
# Chunk 1
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIFIUTATO") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
# Chunk 2
dataset <- filter(dataset,  Esito != "INS")
# dataset$Esito[dataset$Esito == "INS"] <- sample(10:17, size = sum(dataset$Esito == "INS"), replace = T)
dataset <- dataset %>% mutate(Esito = as.numeric(Esito))
ggplot(data  = filter(dataset, Appello == "I"), aes(x = AA, y = Esito, fill = AA)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
ggplot(data  = dataset, aes(x = AA, y = Esito, fill = AA, group = Appello)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
ggplot(data  = dataset, aes(x = AA, y = Esito, fill = Appello)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
ggplot(data  = dataset, aes(x = AA, y = Esito, fill = Appello)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "top") + scale_y_continuous(breaks = 18:31)
# Chunk 1
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIFIUTATO") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
dataset <- filter(dataset,  Esito != "INS")
# dataset$Esito[dataset$Esito == "INS"] <- sample(10:17, size = sum(dataset$Esito == "INS"), replace = T)
dataset <- dataset %>% mutate(Esito = as.numeric(Esito))
ggplot(data  = filter(dataset, Appello == "I"), aes(x = AA, y = Esito, fill = AA)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
# Chunk 1
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIFIUTATO") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
# Chunk 1
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIFIUTATO") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
dataset <- filter(dataset,  Esito != "INS")
# dataset$Esito[dataset$Esito == "INS"] <- sample(10:17, size = sum(dataset$Esito == "INS"), replace = T)
dataset <- dataset %>% mutate(Esito = as.numeric(Esito))
ggplot(data  = filter(dataset, Appello == "I"), aes(x = AA, y = Esito, fill = AA)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
ggplot(data  = dataset, aes(x = AA, y = Esito, fill = Appello)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "top") + scale_y_continuous(breaks = 18:31)
ggplot(data  = filter(dataset, Appello %in% c("I", "II", "III"), aes(x = AA, y = Esito, fill = Appello)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "top") + scale_y_continuous(breaks = 18:31)
ggplot(data  = filter(dataset, Appello %in% c("I", "II", "III")), aes(x = AA, y = Esito, fill = Appello)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "top") + scale_y_continuous(breaks = 18:31)
ggplot(data  = filter(dataset, Appello %in% c("I", "II", "III")), aes(x = AA, y = Esito, fill = Appello)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "top") + scale_y_continuous(breaks = 18:31)
ggplot(data  = filter(dataset, Appello %in% c("I", "II", "III")), aes(x = AA, y = Esito, fill = Appello)) + geom_boxplot() + theme_light() + xlab("Anno Accademico") + theme(legend.position = "top") + scale_y_continuous(breaks = 18:31)
ggplot(data  = filter(dataset, Appello %in% c("I", "II", "III")), aes(x = AA, y = Esito, fill = Appello)) + geom_boxplot() + theme_light() + xlab("Anno Accademico") + theme(legend.position = "top") + scale_y_continuous(breaks = 18:31)
aggregate(Esito ~ AA, mean, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, median, data = filter(dataset, Appello == "I"))
summary(lm(Esito ~ AA, data = filter(dataset, Appello == "I")))
aggregate(Esito ~ AA, mean, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, median, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIFIUTATO") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
dataset <- dataset %>% filter(Esito != "RIFIUTATO") %>%
456
dataset <- dataset %>% filter(Esito != "RIFIUTATO")
# Chunk 1
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
dataset <- dataset %>% filter(Esito != "RIFIUTATO")
dataset <- filter(dataset,  Esito != "INS")
dataset <- dataset %>% mutate(Esito = as.numeric(Esito))
ggplot(data  = filter(dataset, Appello == "I"), aes(x = AA, y = Esito, fill = AA)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
aggregate(Esito ~ AA, function(x) sum(x == "INS"), data = filter(dataset, Appello == "I"))
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS"), data = filter(dataset, Appello == "I"))
dataset <- dataset %>% filter(Esito != "RIFIUTATO")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS"), data = filter(dataset, Appello == "I"))
library(tidyverse)
dataset <- read_delim("data_voti.csv", delim = ";")
# Rimuovo valori mancanti
dataset <- na.omit(dataset)
table(dataset$AA, dataset$Esito)
aggregate(Esito ~ AA,length, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIT"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "ASS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "RIFIUTATO"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS" | x == "RIT"), data = filter(dataset, Appello == "I"))
# Rimuovo assenti
dataset <- dataset %>% filter(Esito != "ASS") %>% filter(Esito != "RIT")
aggregate(Esito ~ AA, function(x) mean(x == "INS"), data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, function(x) sum(x == "INS"), data = filter(dataset, Appello == "I"))
dataset <- dataset %>% filter(Esito != "RIFIUTATO")
dataset <- filter(dataset,  Esito != "INS")
dataset <- dataset %>% mutate(Esito = as.numeric(Esito))
ggplot(data  = filter(dataset, Appello == "I"), aes(x = AA, y = Esito, fill = AA)) + geom_boxplot() + theme_bw() + xlab("Anno Accademico") + theme(legend.position = "none") + scale_y_continuous(breaks = 18:31)
ggplot(data  = filter(dataset, Appello %in% c("I", "II", "III")), aes(x = AA, y = Esito, fill = Appello)) + geom_boxplot() + theme_light() + xlab("Anno Accademico") + theme(legend.position = "top") + scale_y_continuous(breaks = 18:31)
aggregate(Esito ~ AA, mean, data = filter(dataset, Appello == "I"))
aggregate(Esito ~ AA, median, data = filter(dataset, Appello == "I"))
summary(lm(Esito ~ AA, data = filter(dataset, Appello == "I")))
