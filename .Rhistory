## PRELIMINARY QUESTIONS FOR THE EXAMS
Exam <- c("TAB_peso_bambini.Rmd", "ANOVA_piante_Darwin.Rmd", "TEO_kullback_leibler.Rmd")
exams2pdf(Exam, dir = "../STAT1_18_09_2024", name = "STAT1_18_09_2024_",  template = "plain.tex")
## exams ----------------------------------------------------------------------------
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/ESAMI/DOMANDE/")
library("exams")
## PRELIMINARY QUESTIONS FOR THE EXAMS
Exam <- c("TAB_peso_bambini.Rmd", "ANOVA_piante_Darwin.Rmd", "TEO_kullback_leibler.Rmd")
exams2pdf(Exam, dir = "../STAT1_18_09_2024", name = "STAT1_18_09_2024_",  template = "plain.tex")
install.packages("BSDA")
exams2pdf(Exam, dir = "../STAT1_18_09_2024", name = "STAT1_18_09_2024_",  template = "plain.tex")
## exams ----------------------------------------------------------------------------
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/ESAMI/DOMANDE/")
library("exams")
## PRELIMINARY QUESTIONS FOR THE EXAMS
Exam <- c("TAB_peso_bambini.Rmd", "ANOVA_piante_Darwin.Rmd", "TEO_kullback_leibler.Rmd")
exams2pdf(Exam, dir = "../STAT1_18_09_2024", name = "STAT1_18_09_2024_",  template = "plain.tex")
rm(list=ls())
Gini <- function(x){
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
1 - sum(freq_rel^2)
}
Gini_norm <- function(x){
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
k <- length(freq)
k/(k-1)*(1 - sum(freq_rel^2))
}
Shannon <- function(x){
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
- sum(freq_rel*log(freq_rel))
}
Shannon_norm <- function(x){
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
k <- length(freq)
- sum(freq_rel*log(freq_rel))/log(k)
}
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/StatI")
rm(list=ls())
Gini <- function(x){
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
1 - sum(freq_rel^2)
}
Gini_norm <- function(x){
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
k <- length(freq)
k/(k-1)*(1 - sum(freq_rel^2))
}
Shannon <- function(x){
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
- sum(freq_rel*log(freq_rel))
}
Shannon_norm <- function(x){
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
k <- length(freq)
- sum(freq_rel*log(freq_rel))/log(k)
}
elezioni <- read.csv("data/elezioni_europee_Milano_2024.csv", header=TRUE, sep= ";")
elezioni
elezioni <- read.csv("data/elezioni_europee_Milano_2024.csv", header=TRUE, sep= ";")
elezioni$Municipio <- factor(elezioni$Municipio)
elezioni <- aggregate(Voti ~ Lista + Municipio, sum, data = elezioni)
elezioni
levels(elezioni$Lista)
elezioni <- read.csv("data/elezioni_europee_Milano_2024.csv", header=TRUE, sep= ";", stringsAsFactors = TRUE)
elezioni$Municipio <- factor(elezioni$Municipio)
elezioni <- aggregate(Voti ~ Lista + Municipio, sum, data = elezioni)
elezioni <- elezioni %>% slice(rep(1:n(), times = Voti)) %>% select(-Voti)
library(tidyverse)
elezioni <- read.csv("data/elezioni_europee_Milano_2024.csv", header=TRUE, sep= ";", stringsAsFactors = TRUE)
elezioni$Municipio <- factor(elezioni$Municipio)
elezioni <- aggregate(Voti ~ Lista + Municipio, sum, data = elezioni)
elezioni <- elezioni %>% slice(rep(1:n(), times = Voti)) %>% select(-Voti)
levels(elezioni$Lista)
levels(elezioni$Lista) <- c("Alleanza Verdi e Sinistra", "Alternativa Popolare", "Azione - Siamo Europei", "Forza Italia - Noi Moderati - PPE", "Fratelli D'Italia", "Lega Salvini Premier", "Libertà", "Movimento 5 Stelle", "Pace Terra Dignità", "Partito Democratico", "Rassemblement Valdotain", "Stati Uniti D'Europa")
elezioni$Lista <- factor(as.character(elezioni$Lista))
tab <- table(elezioni$Lista, elezioni$Municipio)
library(xtable)
library(knitr)
xtable(addmargins(tab),digits=0)
library(knitr)
kable(tab)
xtable(addmargins(tab),digits=0)
tab <- as.numeric(table(elezioni$Lista))
tab <- t(rbind(tab, tab/sum(tab)))
rownames(tab) <- levels(elezioni$Lista)
xtable(tab)
# Basic barplot
library(ggplot2)
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Candidato") + ylab("Frequenze assolute (voti)")
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Candidato") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Candidato") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Candidato") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 45, vjust = 0, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Candidato") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 45, vjust = 0, hjust=0))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Candidato") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
data = data.frame(Candidato = levels(elezioni$Lista),
value = as.numeric(table(elezioni$Lista))/nrow(elezioni))
# Compute the position of labels
data <- data %>%
arrange(desc(group)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos =  (cumsum(prop) - 0.5*prop ))
# Basic piechart
ggplot(data, aes(x="", y=value, fill=Candidato)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() #+ scale_fill_brewer()
# Basic barplot
library(ggplot2)
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
data = data.frame(Lista = levels(elezioni$Lista),
value = as.numeric(table(elezioni$Lista))/nrow(elezioni))
# Compute the position of labels
data <- data %>%
arrange(desc(group)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos =  (cumsum(prop) - 0.5*prop ))
# Basic piechart
ggplot(data, aes(x="", y=value, fill=Candidato)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() #+ scale_fill_brewer()
# Basic piechart
ggplot(data, aes(x="", y=value, fill=Lista)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() #+ scale_fill_brewer()
x <- factor(c(rep("A", 20),rep("B",100)))
Gini(x)
sum(as.matrix(daisy(data.frame(x=x))))/length(x)^2
library(cluster)
sum(as.matrix(daisy(data.frame(x=x))))/length(x)^2
kable(prop.table(table(elezioni$Municipio, elezioni$Lista),1),digits=3)
tapply(elezioni$Lista, elezioni$Municipio, Gini_norm)
tapply(elezioni$Lista, elezioni$Municipio, Gini)
tapply(elezioni$Lista, elezioni$Municipio, Gini_norm)
round(Gini(elezioni$Lista),4)
round(Gini_norm(elezioni$Lista),4)
round(Shannon(elezioni$Lista),4)
round(Shannon_norm(elezioni$Lista),4)
xtable(cbind(round(tapply(elezioni$Lista, elezioni$Municipio, Gini),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Gini_norm),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon_norm),3)),digits=3)
tapply(elezioni$Lista, elezioni$Municipio, Gini)
kable(prop.table(table(elezioni$Municipio, elezioni$Lista),1),digits=3)
kable(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
xtable(cbind(round(tapply(elezioni$Lista, elezioni$Municipio, Gini),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Gini_norm),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon_norm),3)),digits=3)
elezioni$Lista <- factor(as.character(elezioni$Lista))
tab <- table(elezioni$Lista, elezioni$Municipio)
library(xtable)
library(knitr)
kable(tab)
xtable(addmargins(tab),digits=0)
tab <- as.numeric(table(elezioni$Lista))
tab <- t(rbind(tab, tab/sum(tab)))
rownames(tab) <- levels(elezioni$Lista)
xtable(tab)
# Basic barplot
library(ggplot2)
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
data = data.frame(Lista = levels(elezioni$Lista),
value = as.numeric(table(elezioni$Lista))/nrow(elezioni))
# Basic piechart
ggplot(data, aes(x="", y=value, fill=Lista)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() #+ scale_fill_brewer()
x <- factor(c(rep("A", 20),rep("B",100)))
Gini(x)
library(cluster)
sum(as.matrix(daisy(data.frame(x=x))))/length(x)^2
kable(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
tapply(elezioni$Lista, elezioni$Municipio, Gini)
tapply(elezioni$Lista, elezioni$Municipio, Gini_norm)
round(Gini(elezioni$Lista),4)
round(Gini_norm(elezioni$Lista),4)
round(Shannon(elezioni$Lista),4)
round(Shannon_norm(elezioni$Lista),4)
xtable(cbind(round(tapply(elezioni$Lista, elezioni$Municipio, Gini),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Gini_norm),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon_norm),3)),digits=3)
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 30, vjust = -0.5, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=-1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 30, vjust = 0, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 30, vjust = -0.2, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 30, vjust = 1.2, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 35, vjust = 1, hjust=1))
data = data.frame(Lista = levels(elezioni$Lista),
value = as.numeric(table(elezioni$Lista))/nrow(elezioni))
# Basic piechart
ggplot(data, aes(x="", y=value, fill=Lista)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() #+ scale_fill_brewer()
x <- factor(c(rep("A", 20),rep("B",100)))
Gini(x)
library(cluster)
sum(as.matrix(daisy(data.frame(x=x))))/length(x)^2
kable(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
tapply(elezioni$Lista, elezioni$Municipio, Gini)
tapply(elezioni$Lista, elezioni$Municipio, Gini_norm)
round(Gini(elezioni$Lista),4)
round(Gini_norm(elezioni$Lista),4)
round(Shannon(elezioni$Lista),4)
round(Shannon_norm(elezioni$Lista),4)
xtable(cbind(round(tapply(elezioni$Lista, elezioni$Municipio, Gini),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Gini_norm),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon_norm),3)),digits=3)
dist(elezioni$Lista)
nrow(elezioni)
styler:::style_active_file()
rm(list = ls())
rm(list = ls())
rm(list = ls())
library(tidyverse)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/StatI")
rm(list = ls())
library(tidyverse)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/StatI")
Gini <- function(x) {
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
1 - sum(freq_rel^2)
}
Gini_norm <- function(x) {
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
k <- length(freq)
k / (k - 1) * (1 - sum(freq_rel^2))
}
Shannon <- function(x) {
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
-sum(freq_rel * log(freq_rel))
}
Shannon_norm <- function(x) {
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
k <- length(freq)
-sum(freq_rel * log(freq_rel)) / log(k)
}
elezioni <- read.csv("data/elezioni_europee_Milano_2024.csv", header = TRUE, sep = ";", stringsAsFactors = TRUE)
elezioni$Municipio <- factor(elezioni$Municipio)
elezioni <- aggregate(Voti ~ Lista + Municipio, sum, data = elezioni)
elezioni <- elezioni %>%
slice(rep(1:n(), times = Voti)) %>%
select(-Voti)
levels(elezioni$Lista) <- c("Alleanza Verdi e Sinistra", "Alternativa Popolare", "Azione - Siamo Europei", "Forza Italia - Noi Moderati - PPE", "Fratelli D'Italia", "Lega Salvini Premier", "Libertà", "Movimento 5 Stelle", "Pace Terra Dignità", "Partito Democratico", "Rassemblement Valdotain", "Stati Uniti D'Europa")
tab <- table(elezioni$Lista, elezioni$Municipio)
library(xtable)
library(knitr)
xtable(addmargins(tab), digits = 0)
rm(list = ls())
library(tidyverse)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/Didattica/STAT I/StatI")
Gini <- function(x) {
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
1 - sum(freq_rel^2)
}
Gini_norm <- function(x) {
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
k <- length(freq)
k / (k - 1) * (1 - sum(freq_rel^2))
}
Shannon <- function(x) {
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
-sum(freq_rel * log(freq_rel))
}
Shannon_norm <- function(x) {
freq <- as.numeric(table(x))
freq_rel <- freq / sum(freq)
k <- length(freq)
-sum(freq_rel * log(freq_rel)) / log(k)
}
elezioni <- read.csv("data/elezioni_europee_Milano_2024.csv", header = TRUE, sep = ";", stringsAsFactors = TRUE)
elezioni$Municipio <- factor(elezioni$Municipio)
elezioni <- aggregate(Voti ~ Lista + Municipio, sum, data = elezioni)
elezioni <- elezioni %>%
slice(rep(1:n(), times = Voti)) %>%
select(-Voti)
levels(elezioni$Lista) <- c("Alleanza Verdi e Sinistra", "Alternativa Popolare", "Azione - Siamo Europei", "Forza Italia - Noi Moderati - PPE", "Fratelli D'Italia", "Lega Salvini Premier", "Libertà", "Movimento 5 Stelle", "Pace Terra Dignità", "Partito Democratico", "Rassemblement Valdotain", "Stati Uniti D'Europa")
tab <- table(elezioni$Lista, elezioni$Municipio)
library(xtable)
library(knitr)
xtable(addmargins(tab), digits = 0)
xtable(tab)
kable(tab)
tab <- as.numeric(table(elezioni$Lista))
tab <- t(rbind(tab, tab / sum(tab)))
rownames(tab) <- levels(elezioni$Lista)
kable(tab)
xtable(tab)
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 35, vjust = 1, hjust=1))
data = data.frame(Candidato = levels(elezioni$Lista),
value = as.numeric(table(elezioni$Lista))/nrow(elezioni))
# Basic piechart
ggplot(data, aes(x="", y=value, fill=Candidato)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() #+ scale_fill_brewer()
x <- factor(c(rep("A", 20),rep("B",100)))
Gini(x)
sum(as.matrix(daisy(data.frame(x=x))))/length(x)^2
library(cluster)
Gini(x)
sum(as.matrix(daisy(data.frame(x=x))))/length(x)^2
kable(prop.table(table(elezioni$Municipio, elezioni$Lista),1),digits=3)
kable(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
library(ggplot2)
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 35, vjust = 1, hjust=1))
ggplot(data=elezioni, aes(x=Lista, y=..count..)) + geom_bar() + theme_bw() + xlab("Lista") + ylab("Frequenze assolute (voti)")+ theme(axis.text.x = element_text(angle = 35, vjust = 1, hjust=1))
data = data.frame(Lista = levels(elezioni$Lista),
value = as.numeric(table(elezioni$Lista))/nrow(elezioni))
# Basic piechart
ggplot(data, aes(x="", y=value, fill=Lista)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() #+ scale_fill_brewer()
tapply(elezioni$Lista, elezioni$Municipio, Gini)
tapply(elezioni$Lista, elezioni$Municipio, Gini_norm)
round(Gini(elezioni$Lista),4)
round(Gini_norm(elezioni$Lista),4)
round(Shannon(elezioni$Lista),4)
round(Shannon_norm(elezioni$Lista),4)
table(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
xtable(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
tapply(elezioni$Lista, elezioni$Municipio, Gini)
tapply(elezioni$Lista, elezioni$Municipio, Gini_norm)
kable(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
xtable(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
kable(cbind(round(tapply(elezioni$Lista, elezioni$Municipio, Gini),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Gini_norm),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon_norm),3)),digits=3)
kable(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
xtable(t(prop.table(table(elezioni$Municipio, elezioni$Lista),1)),digits=3)
tapply(elezioni$Lista, elezioni$Municipio, Gini)
tapply(elezioni$Lista, elezioni$Municipio, Gini_norm)
xtable(cbind(round(tapply(elezioni$Lista, elezioni$Municipio, Gini),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Gini_norm),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon),3),
round(tapply(elezioni$Lista, elezioni$Municipio, Shannon_norm),3)),digits=3)
